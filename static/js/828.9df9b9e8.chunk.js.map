{"version":3,"file":"static/js/828.9df9b9e8.chunk.js","mappings":"2JAqBA,IAlBkB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC3B,OACE,wBACGD,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAA1C,SACGG,KAFID,EADC,KASjB,C,mHCAD,EAbmB,SAAC,GAAsB,IAApBK,EAAmB,EAAnBA,aACpB,OACE,kBAAMC,SAAUD,EAAhB,WACE,kBAAOE,KAAK,OAAOC,KAAK,YACxB,mBAAQD,KAAK,SAAb,sBAGL,E,kBCyBD,EA5BoB,WAAO,IAAD,EACxB,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3CjB,GAAWkB,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACmB,KAAvBH,EAAYI,SAIhBC,EAAAA,EAAAA,IAAgBL,GAAaM,MAAK,SAAAC,GAAG,OAAIX,EAAUW,EAAd,GACtC,GAAE,CAACP,IAQJ,OACE,4BACE,SAAC,EAAD,CAAYT,aARK,SAAAiB,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfZ,EAAgB,CAAEa,MAAOF,EAAKG,SAASC,OAAOC,OAC/C,KAKG,SAACC,EAAA,EAAD,CAAWjC,OAAQA,EAAQC,SAAUA,MAG1C,C,+LC9BKiC,EAAU,mCACVC,EAAW,gCAEJC,EAAS,mCAAG,6GAEHC,EAAAA,EAAAA,IAAA,UACbF,EADa,uCAC0BD,IAHvB,cAEfV,EAFe,yBAKdA,EAAIc,KAAKC,SALK,gCAOrBC,QAAQC,IAAR,MAPqB,yDAAH,qDAWTC,EAAY,mCAAG,WAAMvC,GAAN,gGAENkC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BhC,EAA9B,oBAA4C+B,IAFtC,cAElBV,EAFkB,yBAGjBA,EAAIc,MAHa,gCAKxBE,QAAQC,IAAR,MALwB,yDAAH,sDASZE,EAAU,mCAAG,WAAMxC,GAAN,gGAEJkC,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIhC,EADJ,4BAC0B+B,IAHtB,cAEhBV,EAFgB,yBAKfA,EAAIc,KAAKM,MALM,gCAOtBJ,QAAQC,IAAR,MAPsB,yDAAH,sDAWVI,EAAU,mCAAG,WAAM1C,GAAN,gGAEJkC,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIhC,EADJ,4BAC0B+B,IAHtB,cAEhBV,EAFgB,yBAKfA,EAAIc,KAAKC,SALM,gCAOtBC,QAAQC,IAAR,MAPsB,yDAAH,sDAWVnB,EAAe,mCAAG,WAAMO,GAAN,gGAETQ,EAAAA,EAAAA,IAAA,UACbF,EADa,gCACmBD,EADnB,kBACoCL,IAH3B,cAErBL,EAFqB,yBAKpBA,EAAIc,KAAKC,SALW,gCAO3BC,QAAQC,IAAR,MAP2B,yDAAH,qD","sources":["components/MovieList.jsx","components/SearchForm.jsx","pages/Movies.jsx","services/movieApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired,\n};\nexport default MovieList;\n","import PropTypes from 'prop-types';\n\nconst SearchForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"search\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport SearchForm from '../components/SearchForm';\nimport { getMovieByQuery } from 'services/movieApi';\nimport MovieList from 'components/MovieList';\n\nconst MovieSearch = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      return;\n    }\n\n    getMovieByQuery(searchQuery).then(res => setMovies(res));\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.search.value });\n  };\n\n  return (\n    <div>\n      <SearchForm handleSubmit={handleSubmit} />\n      <MovieList movies={movies} location={location} />\n    </div>\n  );\n};\n\nexport default MovieSearch;\n","import axios from 'axios';\n\nconst API_KEY = '5e238007a1f6fff0496d2b1889fa1199';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrends = async () => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const res = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCredits = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return res.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movies","location","map","id","title","to","state","from","handleSubmit","onSubmit","type","name","useState","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useLocation","useEffect","trim","getMovieByQuery","then","res","e","preventDefault","form","currentTarget","query","elements","search","value","MovieList","API_KEY","BASE_URL","getTrends","axios","data","results","console","log","getMovieById","getCredits","cast","getReviews"],"sourceRoot":""}