{"version":3,"file":"static/js/804.7501a2c5.chunk.js","mappings":"4OA+DA,EA1DkB,WAAO,IAAD,IACtB,GAA0BA,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAE3DC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaT,GAASU,MAAK,SAAAC,GAAG,OAAIZ,EAASY,EAAb,GAC/B,GAAE,CAACX,IAEJ,IAAQY,EACNd,EADMc,MAAOC,EACbf,EADae,YAAaC,EAC1BhB,EAD0BgB,SAAUC,EACpCjB,EADoCiB,OAAQC,EAC5ClB,EAD4CkB,aAAcC,EAC1DnB,EAD0DmB,aAG5D,OACE,4BACE,SAAC,KAAD,CAAMC,GAAId,EAAoBe,QAASC,UAAU,cAAjD,sBAGA,iBAAKA,UAAU,YAAf,WACE,gBACEC,IACER,EAAW,yCAC2BA,GAClC,8EAENS,IAAKV,EACLW,MAAO,OAET,4BACE,gBAAIH,UAAU,eAAd,UACGR,EADH,WAEOK,GAAgBA,EAAaO,MAAM,EAAG,GAF7C,SAIA,eAAGJ,UAAU,YAAb,mCACkBK,KAAKC,MAAqB,GAAfV,GAD7B,SAGA,cAAGI,UAAU,kBAAb,uBACA,uBAAIN,KACJ,cAAGM,UAAU,gBAAb,qBACA,uBAAIL,GAAUA,EAAOY,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAIvD,2BACE,yBACE,SAAC,KAAD,CAAMZ,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAa,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,uKC3DKC,EAAU,mCACVC,EAAW,gCAEJC,EAAS,mCAAG,6GAEHC,EAAAA,EAAAA,IAAA,UACbF,EADa,uCAC0BD,IAHvB,cAEftB,EAFe,yBAKdA,EAAI0B,KAAKC,SALK,gCAOrBC,QAAQC,IAAR,MAPqB,yDAAH,qDAWT/B,EAAY,mCAAG,WAAMgC,GAAN,gGAENL,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BO,EAA9B,oBAA4CR,IAFtC,cAElBtB,EAFkB,yBAGjBA,EAAI0B,MAHa,gCAKxBE,QAAQC,IAAR,MALwB,yDAAH,sDASZE,EAAU,mCAAG,WAAOD,EAAIE,GAAX,gGAEJP,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIO,EADJ,YACUE,EADV,oBAC2BV,IAHvB,OAEhBtB,EAFgB,YAKdgC,EALc,OAMf,YANe,OAQf,YARe,+CAOXhC,EAAI0B,KAAKO,MAPE,gCASXjC,EAAI0B,KAAKC,SATE,2FAetBC,QAAQC,IAAR,MAfsB,0DAAH,wDA8BVK,EAAe,mCAAG,WAAMC,GAAN,gGAETV,EAAAA,EAAAA,IAAA,UACbF,EADa,gCACmBD,EADnB,kBACoCa,IAH3B,cAErBnC,EAFqB,yBAKpBA,EAAI0B,KAAKC,SALW,gCAO3BC,QAAQC,IAAR,MAP2B,yDAAH,qD","sources":["pages/MovieInfo/MovieInfo.jsx","services/movieApi.js"],"sourcesContent":["import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/movieApi';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport './MovieInfo.scss';\n\nconst MovieInfo = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMovieById(movieId).then(res => setMovie(res));\n  }, [movieId]);\n\n  const { title, poster_path, overview, genres, vote_average, release_date } =\n    movie;\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current} className=\"goBack__btn\">\n        Back to\n      </Link>\n      <div className=\"container\">\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n          }\n          alt={title}\n          width={250}\n        />\n        <div>\n          <h2 className=\"movie__title\">\n            {title}\n            {`(${release_date && release_date.slice(0, 4)})`}\n          </h2>\n          <p className=\"userscore\">\n            User score: {`${Math.round(vote_average * 10)}%`}\n          </p>\n          <p className=\"overview__title\">Overview</p>\n          <p>{overview}</p>\n          <p className=\"genres__title\">Genres</p>\n          <p>{genres && genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </div>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","import axios from 'axios';\n\nconst API_KEY = '5e238007a1f6fff0496d2b1889fa1199';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrends = async () => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const res = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDetails = async (id, param) => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}movie/${id}/${param}?api_key=${API_KEY}`\n    );\n    switch (param) {\n      case 'credits':\n        return res.data.cast;\n      case 'reviews':\n        return res.data.results;\n\n      default:\n        return;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieById","then","res","title","poster_path","overview","genres","vote_average","release_date","to","current","className","src","alt","width","slice","Math","round","map","genre","name","join","Suspense","fallback","API_KEY","BASE_URL","getTrends","axios","data","results","console","log","id","getDetails","param","cast","getMovieByQuery","query"],"sourceRoot":""}