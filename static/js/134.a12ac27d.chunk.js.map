{"version":3,"file":"static/js/134.a12ac27d.chunk.js","mappings":"sMAqDA,UAjDoB,WAAO,IAAD,EACxB,GAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3CC,GAAWC,EAAAA,EAAAA,OAOjBC,EAAAA,EAAAA,YAAU,WACmB,KAAvBJ,EAAYK,SAIhBC,EAAAA,EAAAA,IAAgBN,GAAaO,MAAK,SAAAC,GAAG,OAAIZ,EAAaY,EAAjB,GACtC,GAAE,CAACR,IAQJ,OACE,4BACE,kBAAMS,SARW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfd,EAAgB,CAAEe,MAAOF,EAAKG,SAASC,OAAOC,OAC/C,EAIG,WACE,kBAEEC,KAAK,OACLC,KAAK,YAGP,mBAAQD,KAAK,SAAb,wBAEF,wBACGvB,EAAUyB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACb,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMvB,GAA1C,SACGoB,KAFID,EADI,QAUtB,C,+LCjDKK,EAAU,mCACVC,EAAW,gCAEJC,EAAS,mCAAG,6GAEHC,EAAAA,EAAAA,IAAA,UACbF,EADa,uCAC0BD,IAHvB,cAEflB,EAFe,yBAKdA,EAAIsB,KAAKC,SALK,gCAOrBC,QAAQC,IAAR,MAPqB,yDAAH,qDAWTC,EAAY,mCAAG,WAAMb,GAAN,gGAENQ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BN,EAA9B,oBAA4CK,IAFtC,cAElBlB,EAFkB,yBAGjBA,EAAIsB,MAHa,gCAKxBE,QAAQC,IAAR,MALwB,yDAAH,sDASZE,EAAU,mCAAG,WAAMd,GAAN,gGAEJQ,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIN,EADJ,4BAC0BK,IAHtB,cAEhBlB,EAFgB,yBAKfA,EAAIsB,KAAKM,MALM,gCAOtBJ,QAAQC,IAAR,MAPsB,yDAAH,sDAWVI,EAAU,mCAAG,WAAMhB,GAAN,gGAEJQ,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIN,EADJ,4BAC0BK,IAHtB,cAEhBlB,EAFgB,yBAKfA,EAAIsB,KAAKC,SALM,gCAOtBC,QAAQC,IAAR,MAPsB,yDAAH,sDAWV3B,EAAe,mCAAG,WAAMQ,GAAN,gGAETe,EAAAA,EAAAA,IAAA,UACbF,EADa,gCACmBD,EADnB,kBACoCZ,IAH3B,cAErBN,EAFqB,yBAKpBA,EAAIsB,KAAKC,SALW,gCAO3BC,QAAQC,IAAR,MAP2B,yDAAH,qD","sources":["pages/Movies.jsx","services/movieApi.js"],"sourcesContent":["import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieByQuery } from 'services/movieApi';\n\nconst MovieSearch = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  // const updateQueryString = e => {\n  //   const param = e.target.value === '' ? {} : { query: e.target.value };\n  //   setSearchParams(param);\n  // };\n\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      return;\n    }\n\n    getMovieByQuery(searchQuery).then(res => setMovieList(res));\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.search.value });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          // value={searchQuery}\n          type=\"text\"\n          name=\"search\"\n          // onChange={updateQueryString}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movieList.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieSearch;\n","import axios from 'axios';\n\nconst API_KEY = '5e238007a1f6fff0496d2b1889fa1199';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrends = async () => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const res = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCredits = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    );\n    return res.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    );\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","trim","getMovieByQuery","then","res","onSubmit","e","preventDefault","form","currentTarget","query","elements","search","value","type","name","map","id","title","to","state","from","API_KEY","BASE_URL","getTrends","axios","data","results","console","log","getMovieById","getCredits","cast","getReviews"],"sourceRoot":""}